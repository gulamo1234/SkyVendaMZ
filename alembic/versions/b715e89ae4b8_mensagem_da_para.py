from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'b715e89ae4b8'
down_revision: Union[str, None] = '4ea518f74993'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pedido', sa.Column('status_visivel_comprador', sa.String(length=20), nullable=True))
    op.add_column('pedido', sa.Column('status_visivel_vendedor', sa.String(length=20), nullable=True))
    op.drop_column('produto', 'status_visivel_comprador')
    op.drop_column('produto', 'status_visivel_vendedor')
    
    # Alterando 'status_visivel_comprador' para BOOLEAN, se necessÃ¡rio
    op.execute('ALTER TABLE pedido ALTER COLUMN status_visivel_comprador TYPE BOOLEAN USING status_visivel_comprador::boolean')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('produto', sa.Column('status_visivel_vendedor', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('produto', sa.Column('status_visivel_comprador', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.drop_column('pedido', 'status_visivel_vendedor')
    op.drop_column('pedido', 'status_visivel_comprador')
    
    # Revertendo 'status_visivel_comprador' para o tipo original (String)
    op.execute('ALTER TABLE pedido ALTER COLUMN status_visivel_comprador TYPE VARCHAR(20) USING status_visivel_comprador::varchar')
    # ### end Alembic commands ###
